import { Eraser } from "lucide-react";
import { Button } from "../ui/button";
import { useState } from "react";
import {
    AlertDialog,
    AlertDialogAction,
    AlertDialogCancel,
    AlertDialogContent,
    AlertDialogDescription,
    AlertDialogFooter,
    AlertDialogHeader,
    AlertDialogTitle,
    AlertDialogTrigger
} from "../ui/alert-dialog";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "../ui/tooltip";
import { Loader2 } from "lucide-react";

interface ClearButtonSubjectProps {
    termYear?: string;
    yearLevel?: string;
    planType?: string;
    onClearComplete?: () => void;
}

// ‡πÉ‡∏ä‡πâ API ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
async function checkCoTeaching(subjectId: number): Promise<boolean> {
    try {
        const response = await fetch(`/api/subject/co-teaching/check?subjectId=${subjectId}`);
        if (response.ok) {
            const data = await response.json();
            return data.planIds && data.planIds.length > 1;
        }
    } catch (error) {
        console.error("Error checking co-teaching:", error);
    }
    return false;
}

export default function ClearButtonSubject({
    termYear = "",
    yearLevel = "",
    planType = "",
    onClearComplete
}: ClearButtonSubjectProps) {
    const [isClearing, setIsClearing] = useState(false);

    const handleClearSubjects = async () => {
        setIsClearing(true);
        try {
            console.log('üóëÔ∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Co-Teaching');

            // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
            const timetableResponse = await fetch(`/api/timetable?termYear=${termYear}&yearLevel=${yearLevel}&planType=${planType}`);

            if (!timetableResponse.ok) {
                throw new Error('Failed to fetch timetable data');
            }

            const timetableData = await timetableResponse.json();
            console.log('üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ:', timetableData);
            console.log('üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö:', timetableData.length);

            if (timetableData.length === 0) {
                console.log('‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏ö');

                if (onClearComplete) {
                    onClearComplete();
                }

                setTimeout(() => {
                    window.location.reload();
                }, 500);

                return;
            }

            // ‡∏•‡∏ö‡∏ó‡∏µ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Co-Teaching
            for (const timetable of timetableData) {
                try {
                    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                    console.log('üîç ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á:', timetable);

                    // ‡∏´‡∏≤ subjectId ‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô
                    let subjectId = timetable.subjectId || timetable.planId || timetable.id;

                    // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏à‡∏≤‡∏Å nested object
                    if (!subjectId && timetable.plan) {
                        subjectId = timetable.plan.id;
                    }

                    if (!subjectId) {
                        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö subjectId ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', timetable);
                        continue;
                    }

                    console.log(`üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Co-Teaching ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡∏ä‡∏≤ ID: ${subjectId}`);

                    // ‡πÉ‡∏ä‡πâ API ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Co-Teaching
                    const isCoTeaching = await checkCoTeaching(subjectId);

                    if (isCoTeaching) {
                        console.log(`üìö ‡∏ß‡∏¥‡∏ä‡∏≤ ID ${subjectId} ‡πÄ‡∏õ‡πá‡∏ô Co-Teaching`);
                    }

                    // ‡∏•‡∏ö‡∏î‡πâ‡∏ß‡∏¢ API ‡πÄ‡∏î‡∏¥‡∏° (‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Co-Teaching ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
                    const response = await fetch(`/api/timetable/${subjectId}`, {
                        method: 'DELETE',
                    });

                    if (response.ok) {
                        const result = await response.json();
                        console.log(`‚úÖ ‡∏•‡∏ö‡∏ß‡∏¥‡∏ä‡∏≤ ID ${subjectId} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:`, result);
                    } else {
                        console.error(`‚ùå ‡∏•‡∏ö‡∏ß‡∏¥‡∏ä‡∏≤ ID ${subjectId} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
                    }
                } catch (error) {
                    console.error(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ß‡∏¥‡∏ä‡∏≤:`, error);
                }
            }

            console.log('‚úÖ ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');

            // ‡∏™‡πà‡∏ß‡∏ô‡∏ã‡∏¥‡πä‡∏á‡∏Ñ‡πå DVE ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°
            const isDVEPlan = planType === "DVE-MSIX" || planType === "DVE-LVC";
            if (isDVEPlan) {
                const targetPlanType = planType === "DVE-MSIX" ? "DVE-LVC" : "DVE-MSIX";

                try {
                    console.log(`üîÑ ‡∏ã‡∏¥‡πä‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á ${targetPlanType}`);

                    const syncResponse = await fetch('/api/timetable/clear', {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            termYear: termYear || '1',
                            yearLevel: yearLevel || '‡∏õ‡∏µ 1',
                            planType: targetPlanType,
                        }),
                    });

                    if (syncResponse.ok) {
                        console.log(`‚úÖ ‡∏ã‡∏¥‡πä‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á ${targetPlanType} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
                    } else {
                        console.log(`‚ö†Ô∏è ‡∏ã‡∏¥‡πä‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á ${targetPlanType} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:`, await syncResponse.text());
                    }
                } catch (syncError) {
                    console.log(`‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏¥‡πä‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á:`, syncError);
                }
            }

            if (onClearComplete) {
                onClearComplete();
            }

            setTimeout(() => {
                window.location.reload();
            }, 500);

        } catch (error) {
            console.error("Error clearing timetable:", error);
        } finally {
            setIsClearing(false);
        }
    };

    return (
        <TooltipProvider>
            <Tooltip>
                <TooltipTrigger asChild>
                    <AlertDialog>
                        <AlertDialogTrigger asChild>
                            <Button
                                className="bg-transparent hover:bg-red-500 text-red-500 hover:text-white border border-red-500 hover:border-transparent gap-2"
                                disabled={isClearing}
                            >
                                {isClearing ? (
                                    <Loader2 className="h-4 w-4 animate-spin" />
                                ) : (
                                    <Eraser className="h-4 w-4" />
                                )}
                                ‡∏•‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏ä‡∏≤
                            </Button>
                        </AlertDialogTrigger>
                        <AlertDialogContent>
                            <AlertDialogHeader>
                                <AlertDialogTitle>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</AlertDialogTitle>
                                <AlertDialogDescription>
                                    ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?
                                    <br />
                                    <span className="text-orange-600 font-medium">
                                        ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏≠‡∏ô‡∏£‡πà‡∏ß‡∏° (Co-Teaching) ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏î‡πâ‡∏ß‡∏¢
                                    </span>
                                </AlertDialogDescription>
                            </AlertDialogHeader>
                            <AlertDialogFooter>
                                <AlertDialogCancel>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</AlertDialogCancel>
                                <AlertDialogAction
                                    onClick={handleClearSubjects}
                                    className="bg-red-500 hover:bg-red-600"
                                >
                                    ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
                                </AlertDialogAction>
                            </AlertDialogFooter>
                        </AlertDialogContent>
                    </AlertDialog>
                </TooltipTrigger>
                <TooltipContent>
                    <p>‡∏•‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á (‡∏£‡∏ß‡∏° Co-Teaching)</p>
                </TooltipContent>
            </Tooltip>
        </TooltipProvider>
    );
}
