generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Term_tb {
  id    Int      @id @default(autoincrement())
  name  String   @unique
  start DateTime
  end   DateTime

  @@map("Term_tb")
}

model Plans_tb {
  id          Int            @id @default(autoincrement())
  subjectCode String
  subjectName String
  credit      Int
  lectureHour Int
  labHour     Int
  planType    String?
  termYear    String?
  yearLevel   String?
  dep         String?
  roomId      Int?
  teacherId   Int?
  section     String?
  room        Room_tb?       @relation(fields: [roomId], references: [id])
  teacher     Teacher_tb?    @relation(fields: [teacherId], references: [id])
  timetables  Timetable_tb[]
  coTeachings CoTeaching_tb[] @relation("CoTeachingPlans")

  @@index([section])
  @@index([roomId])
  @@index([teacherId])
  @@map("Plans_tb")
}

model YearLevel_tb {
  id   Int    @id @default(autoincrement())
  name String

  @@map("YearLevel_tb")
}

model TermYear_tb {
  id       Int    @id @default(1)
  termYear String

  @@map("TermYear_tb")
}

model Room_tb {
  id         Int            @id @default(autoincrement())
  roomCode   String
  roomType   String
  roomCate   String?    
  plans      Plans_tb[]
  timetables Timetable_tb[]

  @@map("Room_tb")
}

model Teacher_tb {
  id          Int            @id @default(autoincrement())
  tId         String
  tName       String
  tLastName   String
  teacherType String
  plans       Plans_tb[]
  timetables  Timetable_tb[]

  @@map("Teacher_tb")
}

model Timetable_tb {
  id          Int         @id @default(autoincrement())
  planId      Int
  termYear    String
  yearLevel   String
  planType    String
  day         Int
  startPeriod Int
  endPeriod   Int
  roomId      Int?
  teacherId   Int?
  section     String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  plan        Plans_tb    @relation(fields: [planId], references: [id], onDelete: Cascade)
  room        Room_tb?    @relation(fields: [roomId], references: [id])
  teacher     Teacher_tb? @relation(fields: [teacherId], references: [id])

  @@index([day, startPeriod, endPeriod])
  @@index([roomId])
  @@index([teacherId])
  @@index([planId])
  @@map("Timetable_tb")
}

model CoTeaching_tb {
  id        Int        @id @default(autoincrement())
  groupKey  String     @unique
  plans     Plans_tb[] @relation("CoTeachingPlans")
}