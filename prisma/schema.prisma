// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Term_tb {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  start    DateTime
  end      DateTime

  @@map("Term_tb")
}

model Plans_tb {
  id             Int        @id @default(autoincrement())
  subjectCode    String
  subjectName    String
  credit         Int
  lectureHour    Int
  labHour        Int
  termYear       String?
  yearLevel      String?
  planType       String?
  dep            String?      
  roomId         Int?        
  room           Room_tb?    @relation(fields: [roomId], references: [id])
  teacherId      Int?
  teacher        Teacher_tb? @relation(fields: [teacherId], references: [id])
  timetables     Timetable_tb[] 
  section        String?

  @@index([section])
  @@map("Plans_tb")
}

model YearLevel_tb {
  id       Int        @id @default(autoincrement())
  name     String

  @@map("YearLevel_tb")
}

model TermYear_tb {
  id       Int    @id @default(1)
  termYear String

  @@map("TermYear_tb")
}

model Room_tb {
  id       Int      @id @default(autoincrement())
  roomCode String
  roomType String
  plans    Plans_tb[]
  timetables Timetable_tb[]

  @@map("Room_tb")
}

model Teacher_tb {
  id          Int        @id @default(autoincrement())
  tId         String
  tName       String
  tLastName   String
  teacherType String
  plans       Plans_tb[]
  timetables Timetable_tb[]

  @@map("Teacher_tb")
}

model Timetable_tb {
  id          Int      @id @default(autoincrement())
  planId      Int      
  termYear    String   
  yearLevel   String   
  planType    String   
  day         Int      
  startPeriod Int      
  endPeriod   Int      
  roomId      Int?     
  teacherId   Int?     
  section     String?  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  plan   Plans_tb   @relation(fields: [planId], references: [id], onDelete: Cascade)
  room   Room_tb?   @relation(fields: [roomId], references: [id])
  teacher Teacher_tb? @relation(fields: [teacherId], references: [id])

  @@index([day, startPeriod, endPeriod])
  @@index([roomId])
  @@index([teacherId])
  @@map("Timetable_tb")
}